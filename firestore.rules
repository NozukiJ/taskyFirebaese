rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isProjectOwnerOrMember(userId, projectId) {
      return exists(/databases/$(database)/documents/projects/$(projectId)) &&
             (get(/databases/$(database)/documents/projects/$(projectId)).data.owners[userId] != null ||
              get(/databases/$(database)/documents/projects/$(projectId)).data.members[userId] != null);
    }

    // ユーザー自身のタスクに対するアクセスを許可
    match /users/{userId}/tasks/{taskId} {
      allow read, write: if request.auth.uid == userId || 
                          (resource.data.projectId != null && isProjectOwnerOrMember(request.auth.uid, resource.data.projectId));
    }

    // プロジェクトに対するアクセスを許可
    match /projects/{projectId} {
      allow read, write: if request.auth != null;
    }

    // コレクショングループクエリを許可
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    // ユーザーのプロフィールに対するアクセスを許可
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth != null;
    }
  }
}
